{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","글제목","누른거","Profile","state","name","this","setState","onClick","changeName","bind","React","Component","App","useState","글제목변경","modal","modal변경","누른거변경","입력값","입력값변경","map","글","i","onChange","e","target","value","arrayCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAyIA,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,+CAAQD,EAAME,mBAAIF,EAAMG,oBAAxB,OACA,6CACA,4D,IAKAC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,KAAM,OAFT,E,yDAMZC,KAAKC,SAAS,CAAEF,KAAM,W,+BAItB,OACE,gCACE,wEACA,8CAAOC,KAAKF,MAAMC,KAAlB,0BACA,wBAAQG,QAASF,KAAKG,WAAWC,KAAKJ,MAAtC,iC,GAfcK,IAAMC,WAqBbC,EApKf,WAAgB,IAAD,EACMC,mBAAS,CAC1B,yCACA,yCACA,2CAJW,mBACRb,EADQ,KACHc,EADG,OAQUD,oBAAS,GARnB,mBAQRE,EARQ,KAQDC,EARC,OASMH,mBAAS,GATf,mBASRZ,EATQ,KASHgB,EATG,OAWMJ,mBAAS,IAXf,mBAWRK,EAXQ,KAWHC,EAXG,KA2Bb,OACE,sBAAKpB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAoCDC,EAAIoB,KAAI,SAAUC,EAAGC,GACpB,OACE,sBAAKvB,UAAU,OAAf,UACE,qBACEQ,QAAS,WACPU,EAAMK,IAFV,UAKG,IACAD,KAEH,8DACA,yBAVyBC,MAc/B,wBACEf,QAAS,WACPU,EAAM,IAFV,2BAOA,wBACEV,QAAS,WACPU,EAAM,IAFV,2BAOA,wBACEV,QAAS,WACPU,EAAM,IAFV,2BAQA,sBAAKlB,UAAU,UAAf,UACE,uBACEwB,SAAU,SAACC,GACTL,EAAMK,EAAEC,OAAOC,UAGnB,wBACEnB,QAAS,WACP,IAAIoB,EAAS,YAAO3B,GACpB2B,EAAUC,QAAQV,GAClBJ,EAAMa,IAJV,6BAUF,cAAC,EAAD,IACA,wBACEpB,QAAS,WACUS,GAAP,IAAVD,IAFJ,qDAOW,IAAVA,EAAiB,cAAClB,EAAD,CAAOG,qBAAKA,EAAKC,qBAAKA,IAAgB,SCxH/C4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c007b78.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  let [글제목, 글제목변경] = useState([\n    \"남자 코트 추천\",\n    \"강남 우동 맛집\",\n    \"여자 코트 추천\",\n  ]);\n  //let [따봉, 따봉변경] = useState(0);\n\n  let [modal, modal변경] = useState(false);\n  let [누른거, 누른거변경] = useState(0);\n\n  let [입력값, 입력값변경] = useState(\"\");\n\n  // function 반복된UI() {\n  //   var 어레이 = [];\n  //   for (var i = 0; i < 3; i++) {\n  //     어레이.push(<div>안녕</div>);\n  //   }\n  //   return 어레이;\n  // }\n\n  //  function 제목바꾸기(){\n  //    var newArray = [...글제목];\n  //    newArray[0] = '여자코트 추천';\n  //    글제목변경( newArray);\n  //  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 blog</div>\n      </div>\n      {/* <button\n        onClick={() => {\n          글제목변경([\"여자 코트 추천\", \"강남 우동 맛집\", \"여자 코트 추천\"]);\n        }}\n      >\n        버튼\n      </button>\n      <div className=\"list\">\n        <h3>\n          {\" \"}\n          {글제목[0]}\n          <span\n            onClick={() => {\n              따봉변경(따봉 + 1);\n            }}\n          >\n            👍\n          </span>\n          {따봉}\n        </h3>\n        <p>2월 17일 발행</p>\n        <hr />\n      </div>\n      <div className=\"list\">\n        <h3> {글제목[1]}</h3>\n        <p>2월 18일 발행</p>\n        <hr />\n      </div>\n      <div className=\"list\">\n        <h3> {글제목[2]}</h3>\n        <p>2월 19일 발행</p>\n        <hr />\n      </div> */}\n\n      {글제목.map(function (글, i) {\n        return (\n          <div className=\"list\" key={i}>\n            <h3\n              onClick={() => {\n                누른거변경(i);\n              }}\n            >\n              {\" \"}\n              {글}\n            </h3>\n            <p>2월 18일 발행</p>\n            <hr />\n          </div>\n        );\n      })}\n      <button\n        onClick={() => {\n          누른거변경(0);\n        }}\n      >\n        버튼1\n      </button>\n      <button\n        onClick={() => {\n          누른거변경(1);\n        }}\n      >\n        버튼2\n      </button>\n      <button\n        onClick={() => {\n          누른거변경(2);\n        }}\n      >\n        버튼3\n      </button>\n\n      <div className=\"publish\">\n        <input\n          onChange={(e) => {\n            입력값변경(e.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            var arrayCopy = [...글제목];\n            arrayCopy.unshift(입력값);\n            글제목변경(arrayCopy);\n          }}\n        >\n          저장\n        </button>\n      </div>\n      <Profile />\n      <button\n        onClick={() => {\n          modal === true ? modal변경(false) : modal변경(true);\n        }}\n      >\n        열고 닫기 버튼\n      </button>\n      {modal === true ? <Modal 글제목={글제목} 누른거={누른거}></Modal> : null}\n    </div>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h2>제목 {props.글제목[props.누른거]} </h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  );\n}\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = { name: \"kim\" };\n  }\n\n  changeName() {\n    this.setState({ name: \"park\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>프로필 입니다.</h3>\n        <p>저는 {this.state.name} 입니다.</p>\n        <button onClick={this.changeName.bind(this)}>버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}